#!/usr/bin/python

"""
This is a simple example that demonstrates multiple links
between nodes.
"""

from mininet.cli import CLI
from mininet.log import setLogLevel
from mininet.net import Mininet
from mininet.topo import Topo
from mininet.link import TCLink, TCIntf, Link
from time import sleep


class runMultiLink():
    #Create and run multiple link network
	link_dic={}
	def __init__(self):
		self.net = Mininet( autoStaticArp = True )
		self.net.addController('c0')
	<% hostInfo.map(function(host) {  -%>
	self.<%- host.name %> = self.net.addHost('<%- host.name %>', ip='<%- host.ip_addr %>')
	<% }) -%>

	<% switchInfo.map(function(entry) { -%>
	self.<%- entry.name %> = self.net.addSwitch('<%- entry.name %>')
	<% }) -%>

	<% nodeLink_listInfo.map(function(entry) { -%>
	self.<%- entry.src_name %>_<%- entry.dst_name %> = self.net.addLink(self.<%- entry.src_name %>,self.<%- entry.dst_name%>, intf=TCIntf, params1 = { 'bw': <%- entry.Bandwidth_mbps%> , 'delay' : '<%- entry.Delay_ms%>ms' , 'loss' : <%- entry.Loss%>}, params2 = { 'bw': <%- entry.Bandwidth_mbps%> , 'delay' : '<%- entry.Delay_ms%>ms' , 'loss' : <%- entry.Loss%>})
	<% }) -%>
	
	<% nodeLink_listInfo.map(function(entry) { -%>
	self.link_dic['<%- entry.src_name %>','<%- entry.dst_name %>'] = self.<%- entry.src_name %>_<%- entry.dst_name %>
	<% }) -%>


def runApps(net):
    #Run cmds in command.txt
    print ("Running applications")
    with open("command.txt") as f:
        for line in f:
            splitedLine = line.split(' ', 1)
            print (splitedLine[0])
            host = (net.get(splitedLine[0]))
            print (splitedLine[1])
            host.cmd(splitedLine[1])


if __name__ == '__main__':
	setLogLevel( 'info' )
	example = runMultiLink()
	example.net.start()
	runApps(example.net)
	sleep(30)
	example.net.stop()
